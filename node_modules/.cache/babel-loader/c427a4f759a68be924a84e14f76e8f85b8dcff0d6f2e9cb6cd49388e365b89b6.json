{"ast":null,"code":"var _jsxFileName = \"/Users/huluobo/Github_Content/Project-Code/src/components/FileTree.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Folder, File, PlusCircle, Trash2, FolderPlus } from 'lucide-react';\n\n// const FileTree = ({ files, onSelectFile, onCreateFile, onDeleteFile, selectedFileId }) => {\n//   const [newItemName, setNewItemName] = useState('');\n//   const [expandedFolders, setExpandedFolders] = useState(() => {\n//     // 从 localStorage 初始化 expandedFolders，如果没有则默认为 { root: true }\n//     const stored = localStorage.getItem('expandedFolders');\n//     return stored ? JSON.parse(stored) : { root: true };\n//   });\n//   const [showNewItemInput, setShowNewItemInput] = useState({ root: true });\n\n//   const toggleFolder = (id) => {\n//     setExpandedFolders(prev => {\n//       const updated = { ...prev, [id]: !prev[id] };\n//       // 将更新后的展开状态保存到 localStorage\n//       localStorage.setItem('expandedFolders', JSON.stringify(updated));\n//       return updated;\n//     });\n//   };\n\n//   const handleCreateItem = (parentId, isFolder = false) => {\n//     if (newItemName.trim()) {\n//       onCreateFile(parentId, newItemName.trim(), isFolder);\n//       setNewItemName('');\n//       setShowNewItemInput(prev => ({ ...prev, [parentId]: false }));\n//     }\n//   };\n\n//   const handleKeyPress = (e, parentId, isFolder = false) => {\n//     if (e.key === 'Enter') {\n//       handleCreateItem(parentId, isFolder);\n//     }\n//   };\n\n//   const renderNewItemInput = (parentId) => (\n//     <div className=\"flex items-center mb-2\">\n//       <input\n//         type=\"text\"\n//         value={newItemName}\n//         onChange={(e) => setNewItemName(e.target.value)}\n//         onKeyPress={(e) => handleKeyPress(e, parentId)}\n//         className=\"p-1 border rounded mr-2 text-sm flex-grow\"\n//         placeholder=\"New item name\"\n//       />\n//       <button\n//         onClick={() => handleCreateItem(parentId)}\n//         className=\"p-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300 mr-1\"\n//       >\n//         <File size={16} />\n//       </button>\n//       <button\n//         onClick={() => handleCreateItem(parentId, true)}\n//         className=\"p-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-300\"\n//       >\n//         <FolderPlus size={16} />\n//       </button>\n//     </div>\n//   );\n\n//   const renderTree = (items, parentId = 'root') => {\n//     if (items.length === 0 && parentId === 'root') {\n//       return (\n//         <li key=\"new-item-input\" className=\"py-1\">\n//           {renderNewItemInput('root')}\n//         </li>\n//       );\n//     }\n\n//     return items.map((item) => (\n//       <li key={item.id} className=\"py-1\">\n//         {item.type === 'folder' ? (\n//           <div>\n//             <div className=\"flex items-center\">\n//               <div \n//                 className=\"flex items-center cursor-pointer flex-grow\" \n//                 onClick={() => toggleFolder(item.id)}\n//               >\n//                 <Folder size={16} className=\"mr-2 text-yellow-500\" />\n//                 <span className=\"text-gray-800\">{item.name}</span>\n//               </div>\n//               <button\n//                 onClick={() => setShowNewItemInput(prev => ({ ...prev, [item.id]: !prev[item.id] }))}\n//                 className=\"p-1 text-green-500 rounded hover:bg-green-100 transition duration-300 mr-1\"\n//               >\n//                 <PlusCircle size={16} />\n//               </button>\n//               {parentId !== 'root' && (\n//                 <button\n//                   onClick={() => onDeleteFile(item.id)}\n//                   className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n//                 >\n//                   <Trash2 size={16} />\n//                 </button>\n//               )}\n//             </div>\n//             {expandedFolders[item.id] && (\n//               <div className=\"ml-4 mt-2\">\n//                 {showNewItemInput[item.id] && renderNewItemInput(item.id)}\n//                 <ul className=\"pl-4\">\n//                   {item.children && item.children.length > 0 \n//                     ? renderTree(item.children, item.id)\n//                     : <li className=\"text-gray-500 italic\">Empty folder</li>\n//                   }\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           <div className={`flex items-center ${selectedFileId === item.id ? 'bg-blue-100' : ''}`}>\n//             <div \n//               className=\"flex items-center cursor-pointer flex-grow p-1 rounded\"\n//               onClick={() => onSelectFile(item)}\n//             >\n//               <File size={16} className=\"mr-2 text-blue-500\" />\n//               <span className=\"text-gray-800\">{item.name}</span>\n//             </div>\n//             <button\n//               onClick={() => onDeleteFile(item.id)}\n//               className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n//             >\n//               <Trash2 size={16} />\n//             </button>\n//           </div>\n//         )}\n//       </li>\n//     ));\n//   };\n\n//   return (\n//     <div className=\"file-tree\">\n//       <ul className=\"pl-4\">\n//         {renderTree(files)}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default FileTree;\nimport React, { useState } from 'react';\nimport { Folder, File, PlusCircle, Trash2, FolderPlus } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileTree = ({\n  files,\n  onSelectFile,\n  onCreateFile,\n  onDeleteFile,\n  selectedFileId\n}) => {\n  _s();\n  const [newItemName, setNewItemName] = useState('');\n  const [expandedFolders, setExpandedFolders] = useState(() => {\n    const stored = localStorage.getItem('expandedFolders');\n    return stored ? JSON.parse(stored) : {\n      root: true\n    };\n  });\n  const [showNewItemInput, setShowNewItemInput] = useState({\n    root: true\n  });\n  const toggleFolder = id => {\n    setExpandedFolders(prev => {\n      const updated = {\n        ...prev,\n        [id]: !prev[id]\n      };\n      localStorage.setItem('expandedFolders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  const handleCreateItem = (parentId, isFolder = false) => {\n    if (newItemName.trim()) {\n      onCreateFile(parentId, newItemName.trim(), isFolder);\n      setNewItemName('');\n      setShowNewItemInput(prev => ({\n        ...prev,\n        [parentId]: false\n      }));\n    }\n  };\n  const handleKeyPress = (e, parentId, isFolder = false) => {\n    if (e.key === 'Enter') {\n      handleCreateItem(parentId, isFolder);\n    }\n  };\n  const handleDeleteItem = (id, items) => {\n    return items.filter(item => {\n      if (item.id === id) {\n        return false;\n      } else if (item.children) {\n        item.children = handleDeleteItem(id, item.children);\n      }\n      return true;\n    });\n  };\n  const renderNewItemInput = parentId => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      onChange: e => setNewItemName(e.target.value),\n      onKeyPress: e => handleKeyPress(e, parentId),\n      className: \"p-1 border rounded mr-2 text-sm flex-grow\",\n      placeholder: \"New item name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleCreateItem(parentId),\n      className: \"p-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300 mr-1\",\n      children: /*#__PURE__*/_jsxDEV(File, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleCreateItem(parentId, true),\n      className: \"p-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-300\",\n      children: /*#__PURE__*/_jsxDEV(FolderPlus, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n  const renderTree = (items, parentId = 'root') => {\n    if (items.length === 0 && parentId === 'root') {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"py-1\",\n        children: renderNewItemInput('root')\n      }, \"new-item-input\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this);\n    }\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"py-1\",\n      children: item.type === 'folder' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center cursor-pointer flex-grow\",\n            onClick: () => toggleFolder(item.id),\n            children: [/*#__PURE__*/_jsxDEV(Folder, {\n              size: 16,\n              className: \"mr-2 text-yellow-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-800\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewItemInput(prev => ({\n              ...prev,\n              [item.id]: !prev[item.id]\n            })),\n            className: \"p-1 text-green-500 rounded hover:bg-green-100 transition duration-300 mr-1\",\n            children: /*#__PURE__*/_jsxDEV(PlusCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), parentId !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const updatedFiles = handleDeleteItem(item.id, files);\n              onDeleteFile(item.id); // Assuming this triggers the actual delete logic on the parent component\n            },\n            className: \"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), expandedFolders[item.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-4 mt-2\",\n          children: [showNewItemInput[item.id] && renderNewItemInput(item.id), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pl-4\",\n            children: item.children && item.children.length > 0 ? renderTree(item.children, item.id) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-500 italic\",\n              children: \"Empty folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center ${selectedFileId === item.id ? 'bg-blue-100' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center cursor-pointer flex-grow p-1 rounded\",\n          onClick: () => onSelectFile(item),\n          children: [/*#__PURE__*/_jsxDEV(File, {\n            size: 16,\n            className: \"mr-2 text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-800\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDeleteFile(item.id),\n          className: \"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\",\n          children: /*#__PURE__*/_jsxDEV(Trash2, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-tree\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pl-4\",\n      children: renderTree(files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(FileTree, \"yL7LX3/uXap17hL3ZO+9x++MsKI=\");\n_c = FileTree;\nexport default FileTree;\nvar _c;\n$RefreshReg$(_c, \"FileTree\");","map":{"version":3,"names":["React","useState","Folder","File","PlusCircle","Trash2","FolderPlus","jsxDEV","_jsxDEV","FileTree","files","onSelectFile","onCreateFile","onDeleteFile","selectedFileId","_s","newItemName","setNewItemName","expandedFolders","setExpandedFolders","stored","localStorage","getItem","JSON","parse","root","showNewItemInput","setShowNewItemInput","toggleFolder","id","prev","updated","setItem","stringify","handleCreateItem","parentId","isFolder","trim","handleKeyPress","e","key","handleDeleteItem","items","filter","item","children","renderNewItemInput","className","type","value","onChange","target","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","renderTree","length","map","name","updatedFiles","_c","$RefreshReg$"],"sources":["/Users/huluobo/Github_Content/Project-Code/src/components/FileTree.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Folder, File, PlusCircle, Trash2, FolderPlus } from 'lucide-react';\n\n// const FileTree = ({ files, onSelectFile, onCreateFile, onDeleteFile, selectedFileId }) => {\n//   const [newItemName, setNewItemName] = useState('');\n//   const [expandedFolders, setExpandedFolders] = useState(() => {\n//     // 从 localStorage 初始化 expandedFolders，如果没有则默认为 { root: true }\n//     const stored = localStorage.getItem('expandedFolders');\n//     return stored ? JSON.parse(stored) : { root: true };\n//   });\n//   const [showNewItemInput, setShowNewItemInput] = useState({ root: true });\n\n//   const toggleFolder = (id) => {\n//     setExpandedFolders(prev => {\n//       const updated = { ...prev, [id]: !prev[id] };\n//       // 将更新后的展开状态保存到 localStorage\n//       localStorage.setItem('expandedFolders', JSON.stringify(updated));\n//       return updated;\n//     });\n//   };\n\n//   const handleCreateItem = (parentId, isFolder = false) => {\n//     if (newItemName.trim()) {\n//       onCreateFile(parentId, newItemName.trim(), isFolder);\n//       setNewItemName('');\n//       setShowNewItemInput(prev => ({ ...prev, [parentId]: false }));\n//     }\n//   };\n\n//   const handleKeyPress = (e, parentId, isFolder = false) => {\n//     if (e.key === 'Enter') {\n//       handleCreateItem(parentId, isFolder);\n//     }\n//   };\n\n//   const renderNewItemInput = (parentId) => (\n//     <div className=\"flex items-center mb-2\">\n//       <input\n//         type=\"text\"\n//         value={newItemName}\n//         onChange={(e) => setNewItemName(e.target.value)}\n//         onKeyPress={(e) => handleKeyPress(e, parentId)}\n//         className=\"p-1 border rounded mr-2 text-sm flex-grow\"\n//         placeholder=\"New item name\"\n//       />\n//       <button\n//         onClick={() => handleCreateItem(parentId)}\n//         className=\"p-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300 mr-1\"\n//       >\n//         <File size={16} />\n//       </button>\n//       <button\n//         onClick={() => handleCreateItem(parentId, true)}\n//         className=\"p-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-300\"\n//       >\n//         <FolderPlus size={16} />\n//       </button>\n//     </div>\n//   );\n\n//   const renderTree = (items, parentId = 'root') => {\n//     if (items.length === 0 && parentId === 'root') {\n//       return (\n//         <li key=\"new-item-input\" className=\"py-1\">\n//           {renderNewItemInput('root')}\n//         </li>\n//       );\n//     }\n\n//     return items.map((item) => (\n//       <li key={item.id} className=\"py-1\">\n//         {item.type === 'folder' ? (\n//           <div>\n//             <div className=\"flex items-center\">\n//               <div \n//                 className=\"flex items-center cursor-pointer flex-grow\" \n//                 onClick={() => toggleFolder(item.id)}\n//               >\n//                 <Folder size={16} className=\"mr-2 text-yellow-500\" />\n//                 <span className=\"text-gray-800\">{item.name}</span>\n//               </div>\n//               <button\n//                 onClick={() => setShowNewItemInput(prev => ({ ...prev, [item.id]: !prev[item.id] }))}\n//                 className=\"p-1 text-green-500 rounded hover:bg-green-100 transition duration-300 mr-1\"\n//               >\n//                 <PlusCircle size={16} />\n//               </button>\n//               {parentId !== 'root' && (\n//                 <button\n//                   onClick={() => onDeleteFile(item.id)}\n//                   className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n//                 >\n//                   <Trash2 size={16} />\n//                 </button>\n//               )}\n//             </div>\n//             {expandedFolders[item.id] && (\n//               <div className=\"ml-4 mt-2\">\n//                 {showNewItemInput[item.id] && renderNewItemInput(item.id)}\n//                 <ul className=\"pl-4\">\n//                   {item.children && item.children.length > 0 \n//                     ? renderTree(item.children, item.id)\n//                     : <li className=\"text-gray-500 italic\">Empty folder</li>\n//                   }\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           <div className={`flex items-center ${selectedFileId === item.id ? 'bg-blue-100' : ''}`}>\n//             <div \n//               className=\"flex items-center cursor-pointer flex-grow p-1 rounded\"\n//               onClick={() => onSelectFile(item)}\n//             >\n//               <File size={16} className=\"mr-2 text-blue-500\" />\n//               <span className=\"text-gray-800\">{item.name}</span>\n//             </div>\n//             <button\n//               onClick={() => onDeleteFile(item.id)}\n//               className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n//             >\n//               <Trash2 size={16} />\n//             </button>\n//           </div>\n//         )}\n//       </li>\n//     ));\n//   };\n\n//   return (\n//     <div className=\"file-tree\">\n//       <ul className=\"pl-4\">\n//         {renderTree(files)}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default FileTree;\nimport React, { useState } from 'react';\nimport { Folder, File, PlusCircle, Trash2, FolderPlus } from 'lucide-react';\n\nconst FileTree = ({ files, onSelectFile, onCreateFile, onDeleteFile, selectedFileId }) => {\n  const [newItemName, setNewItemName] = useState('');\n  const [expandedFolders, setExpandedFolders] = useState(() => {\n    const stored = localStorage.getItem('expandedFolders');\n    return stored ? JSON.parse(stored) : { root: true };\n  });\n  const [showNewItemInput, setShowNewItemInput] = useState({ root: true });\n\n  const toggleFolder = (id) => {\n    setExpandedFolders(prev => {\n      const updated = { ...prev, [id]: !prev[id] };\n      localStorage.setItem('expandedFolders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const handleCreateItem = (parentId, isFolder = false) => {\n    if (newItemName.trim()) {\n      onCreateFile(parentId, newItemName.trim(), isFolder);\n      setNewItemName('');\n      setShowNewItemInput(prev => ({ ...prev, [parentId]: false }));\n    }\n  };\n\n  const handleKeyPress = (e, parentId, isFolder = false) => {\n    if (e.key === 'Enter') {\n      handleCreateItem(parentId, isFolder);\n    }\n  };\n\n  const handleDeleteItem = (id, items) => {\n    return items.filter(item => {\n      if (item.id === id) {\n        return false;\n      } else if (item.children) {\n        item.children = handleDeleteItem(id, item.children);\n      }\n      return true;\n    });\n  };\n\n  const renderNewItemInput = (parentId) => (\n    <div className=\"flex items-center mb-2\">\n      <input\n        type=\"text\"\n        value={newItemName}\n        onChange={(e) => setNewItemName(e.target.value)}\n        onKeyPress={(e) => handleKeyPress(e, parentId)}\n        className=\"p-1 border rounded mr-2 text-sm flex-grow\"\n        placeholder=\"New item name\"\n      />\n      <button\n        onClick={() => handleCreateItem(parentId)}\n        className=\"p-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300 mr-1\"\n      >\n        <File size={16} />\n      </button>\n      <button\n        onClick={() => handleCreateItem(parentId, true)}\n        className=\"p-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-300\"\n      >\n        <FolderPlus size={16} />\n      </button>\n    </div>\n  );\n\n  const renderTree = (items, parentId = 'root') => {\n    if (items.length === 0 && parentId === 'root') {\n      return (\n        <li key=\"new-item-input\" className=\"py-1\">\n          {renderNewItemInput('root')}\n        </li>\n      );\n    }\n\n    return items.map((item) => (\n      <li key={item.id} className=\"py-1\">\n        {item.type === 'folder' ? (\n          <div>\n            <div className=\"flex items-center\">\n              <div \n                className=\"flex items-center cursor-pointer flex-grow\" \n                onClick={() => toggleFolder(item.id)}\n              >\n                <Folder size={16} className=\"mr-2 text-yellow-500\" />\n                <span className=\"text-gray-800\">{item.name}</span>\n              </div>\n              <button\n                onClick={() => setShowNewItemInput(prev => ({ ...prev, [item.id]: !prev[item.id] }))}\n                className=\"p-1 text-green-500 rounded hover:bg-green-100 transition duration-300 mr-1\"\n              >\n                <PlusCircle size={16} />\n              </button>\n              {parentId !== 'root' && (\n                <button\n                  onClick={() => {\n                    const updatedFiles = handleDeleteItem(item.id, files);\n                    onDeleteFile(item.id); // Assuming this triggers the actual delete logic on the parent component\n                  }}\n                  className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n                >\n                  <Trash2 size={16} />\n                </button>\n              )}\n            </div>\n            {expandedFolders[item.id] && (\n              <div className=\"ml-4 mt-2\">\n                {showNewItemInput[item.id] && renderNewItemInput(item.id)}\n                <ul className=\"pl-4\">\n                  {item.children && item.children.length > 0 \n                    ? renderTree(item.children, item.id)\n                    : <li className=\"text-gray-500 italic\">Empty folder</li>\n                  }\n                </ul>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className={`flex items-center ${selectedFileId === item.id ? 'bg-blue-100' : ''}`}>\n            <div \n              className=\"flex items-center cursor-pointer flex-grow p-1 rounded\"\n              onClick={() => onSelectFile(item)}\n            >\n              <File size={16} className=\"mr-2 text-blue-500\" />\n              <span className=\"text-gray-800\">{item.name}</span>\n            </div>\n            <button\n              onClick={() => onDeleteFile(item.id)}\n              className=\"p-1 text-red-500 rounded hover:bg-red-100 transition duration-300\"\n            >\n              <Trash2 size={16} />\n            </button>\n          </div>\n        )}\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"file-tree\">\n      <ul className=\"pl-4\">\n        {renderTree(files)}\n      </ul>\n    </div>\n  );\n};\n\nexport default FileTree;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}