{"ast":null,"code":"var _jsxFileName = \"/Users/huluobo/Github_Content/Project-Code/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import { Send } from 'lucide-react';\n\n// const ChatBox = ({ messages, onSendMessage }) => {\n//   const [input, setInput] = useState('');\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = () => {\n//     if (input.trim()) {\n//       onSendMessage(input);\n//       setInput('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-full overflow-hidden\">\n//       <div className=\"flex-grow overflow-y-auto p-4 space-y-4\">\n//         {messages.map((msg, index) => (\n//           <div \n//             key={index} \n//             className={`p-2 rounded-lg ${\n//               msg.sender === 'user' \n//                 ? 'bg-blue-100 ml-auto text-right' \n//                 : 'bg-gray-100'\n//             } max-w-3/4`}\n//           >\n//             {msg.content}\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"flex p-4 bg-white border-t\">\n//         <input\n//           type=\"text\"\n//           className=\"flex-grow mr-2 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n//           placeholder=\"Enter your message...\"\n//         />\n//         <button \n//           onClick={handleSend} \n//           className=\"p-2 bg-blue-500 text-white rounded-md transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n//         >\n//           <Send size={20} />\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBox;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  messages,\n  onSendMessage\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSend = () => {\n    if (input.trim()) {\n      onSendMessage(input);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-4 space-y-4\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg ${msg.sender === 'user' ? 'bg-blue-100 ml-auto text-right' : 'bg-gray-100'} max-w-3/4`,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-4 bg-white border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-grow mr-2 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend(),\n        placeholder: \"Enter your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"p-2 bg-blue-500 text-white rounded-md transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"X/z4qmiNhorkSBII6TQsWlgEcpQ=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","jsxDEV","_jsxDEV","ChatBox","messages","onSendMessage","_s","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","className","children","map","msg","index","sender","content","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","size","_c","$RefreshReg$"],"sources":["/Users/huluobo/Github_Content/Project-Code/src/components/ChatBox.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import { Send } from 'lucide-react';\n\n// const ChatBox = ({ messages, onSendMessage }) => {\n//   const [input, setInput] = useState('');\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = () => {\n//     if (input.trim()) {\n//       onSendMessage(input);\n//       setInput('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-full overflow-hidden\">\n//       <div className=\"flex-grow overflow-y-auto p-4 space-y-4\">\n//         {messages.map((msg, index) => (\n//           <div \n//             key={index} \n//             className={`p-2 rounded-lg ${\n//               msg.sender === 'user' \n//                 ? 'bg-blue-100 ml-auto text-right' \n//                 : 'bg-gray-100'\n//             } max-w-3/4`}\n//           >\n//             {msg.content}\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"flex p-4 bg-white border-t\">\n//         <input\n//           type=\"text\"\n//           className=\"flex-grow mr-2 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n//           placeholder=\"Enter your message...\"\n//         />\n//         <button \n//           onClick={handleSend} \n//           className=\"p-2 bg-blue-500 text-white rounded-md transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n//         >\n//           <Send size={20} />\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBox;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send } from 'lucide-react';\n\nconst ChatBox = ({ messages, onSendMessage }) => {\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSend = () => {\n    if (input.trim()) {\n      onSendMessage(input);\n      setInput('');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full overflow-hidden\">\n      <div className=\"flex-grow overflow-y-auto p-4 space-y-4\">\n        {messages.map((msg, index) => (\n          <div \n            key={index} \n            className={`p-2 rounded-lg ${\n              msg.sender === 'user' \n                ? 'bg-blue-100 ml-auto text-right' \n                : 'bg-gray-100'\n            } max-w-3/4`}\n          >\n            {msg.content}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"flex p-4 bg-white border-t\">\n        <input\n          type=\"text\"\n          className=\"flex-grow mr-2 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n          placeholder=\"Enter your message...\"\n        />\n        <button \n          onClick={handleSend} \n          className=\"p-2 bg-blue-500 text-white rounded-md transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n        >\n          <Send size={20} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}