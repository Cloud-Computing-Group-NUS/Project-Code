{"ast":null,"code":"var _jsxFileName = \"/Users/huluobo/Github_Content/Project-Code/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Save, Edit } from 'lucide-react';\nimport io from 'socket.io-client';\nimport FileTree from './components/FileTree';\nimport Editor from './components/Editor';\nimport ChatBox from './components/ChatBox';\nimport { transitServerApi, cloudDriveApi } from './apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileSystem, setFileSystem] = useState([]); // FileSystem \"Object\"\n  const [selectedFile, setSelectedFile] = useState(null); // SelectedFile \"Object\"\n  const [aiModifiedContent, setAiModifiedContent] = useState(''); // AI-modified \"Content\"\n  const [messages, setMessages] = useState([]); // Conversation \"Messages History\"\n\n  useEffect(() => {\n    const existingUserId = sessionStorage.getItem('userId');\n    if (!existingUserId) {\n      // 如果不存在userId，则创建一个新的userId并将其存储在sessionStorage中\n      const newUserId = `user_${Date.now()}_${Math.random().toString(36).slice(2, 11)}`;\n      sessionStorage.setItem('userId', newUserId);\n    }\n    fetchInitialFileSystem();\n    const socket = io('/ng/cloud-drive-service', {\n      path: '/socket.io'\n    }); // 创建一个到服务器的WebSocket连接\n    socket.on('fileSystemUpdate', updatedFileSystem => {\n      setFileSystem(updatedFileSystem);\n    }); // 监听fileSystemUpdate事件，当服务器发送更新后的文件系统数据时，setFileSystem(updatedFileSystem)将被调用来更新组件状态\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // with Drive-Backend\n  const fetchInitialFileSystem = async () => {\n    try {\n      const response = await cloudDriveApi.getInitialFileSystem(); // Web <-> Drive -> initialFileSystem\n      setFileSystem(response.data);\n    } catch (error) {\n      console.error('Error fetching initial file system:', error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleSaveContent = useCallback(async content => {\n    // 接收一个参数content，即要保存的文件内容\n    if (!selectedFile) return;\n    try {\n      await cloudDriveApi.saveFile({\n        file: {\n          id: selectedFile.id,\n          content: content\n        }\n      });\n      console.log('File saved successfully');\n      setSelectedFile(prevFile => ({\n        ...prevFile,\n        content\n      })); // 更新本地状态selectedFile，将最新的文件内容content赋值给selectedFile的content属性\n\n      setFileSystem(prevFileSystem => {\n        // 更新应用程序的文件系统状态，确保文件系统中包含最新的文件内容\n        const updateFileInSystem = files => {\n          // 用于递归遍历文件系统树，查找与selectedFile.id匹配的文件，并更新其内容\n          return files.map(file => {\n            if (file.id === selectedFile.id) {\n              // 文件的id与selectedFile.id相同，返回一个新对象，其内容更新为content\n              return {\n                ...file,\n                content\n              };\n            }\n            if (file.children) {\n              // 文件有子文件，递归调用updateFileInSystem函数来更新子文件的内容\n              return {\n                ...file,\n                children: updateFileInSystem(file.children)\n              };\n            }\n            return file; // 文件的id不匹配且没有子文件，直接返回原文件对象\n          });\n        };\n        return updateFileInSystem(prevFileSystem);\n      });\n    } catch (error) {\n      console.error('Error saving file:', error);\n    }\n  }, [selectedFile]);\n  const handleSelectFile = file => {\n    setSelectedFile(file);\n    setAiModifiedContent('');\n  };\n\n  // with AI-Backend\n  const handleSendMessage = async message => {\n    const userId = sessionStorage.getItem('userId'); // 标识消息的发送者\n    const newMessage = {\n      sender: userId,\n      content: message,\n      timestamp: new Date().toISOString(),\n      file: selectedFile ? selectedFile.id : null // 如果selectedFile存在，则为它的ID，否则为null。表示如果用户发送消息时关联了一个文件，仅发送文件的ID，而不是整个文件对象\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]); // setMessages函数更新本地状态，将新消息添加 (append) 到现有的消息列表\n\n    try {\n      const response = await transitServerApi.getChatContent(newMessage);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'ai',\n        content: response.data.content\n      }]); // AI-Res append\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'ai',\n        content: 'Sorry, there was an error processing your request.'\n      }]); // Error append\n    }\n  };\n  const handleGenerateModification = async () => {\n    if (!selectedFile) return;\n    try {\n      const userId = sessionStorage.getItem('userId');\n      const genModifyMessage = {\n        sender: userId,\n        content: \"Please modify this file\",\n        timestamp: new Date().toISOString(),\n        prevFile: selectedFile ? selectedFile.id : null,\n        // 只发送文件ID\n        aiModifiedContent: aiModifiedContent // 发送AI修改后的内容\n      };\n      const response = await transitServerApi.getFileContent(genModifyMessage); // 发送请求，建立连接，传递 genModifyMessage 对象，等待响应\n      setAiModifiedContent(response.data.content); // 从响应中提取修改后的内容，并调用 setAiModifiedContent 将其设置为AI修改后的内容\n    } catch (error) {\n      console.error('Error generating modification:', error);\n    }\n  };\n  const handleSubmitModification = async () => {\n    if (!selectedFile) return;\n    try {\n      const userId = sessionStorage.getItem('userId');\n      const sendModifyMessage = {\n        sender: userId,\n        content: \"submit modified file\",\n        timestamp: new Date().toISOString(),\n        prevFile: selectedFile ? selectedFile.id : null,\n        // 只发送文件ID\n        aiModifiedContent: aiModifiedContent // 发送AI修改后的内容\n      };\n      await transitServerApi.getTrainData(sendModifyMessage);\n      setSelectedFile(prev => ({\n        ...prev,\n        content: aiModifiedContent\n      }));\n      // setSelectedFile 更新选中文件的内容，将其设置为AI修改后的内容。\n      // 箭头函数=> ，保留文件的其他属性，仅更新 content 属性\n      setAiModifiedContent(''); // 将 aiModifiedContent 清空，重置为初始状态\n\n      setFileSystem(prevFileSystem => {\n        const updateFileInSystem = files => {\n          return files.map(file => {\n            if (file.id === selectedFile.id) {\n              return {\n                ...file,\n                content: aiModifiedContent\n              };\n            }\n            if (file.children) {\n              return {\n                ...file,\n                children: updateFileInSystem(file.children)\n              };\n            }\n            return file;\n          });\n        };\n        return updateFileInSystem(prevFileSystem);\n      });\n      /**\n       * 用 setFileSystem 更新文件系统的状态。\n       * 定义一个名为 updateFileInSystem 的函数，该函数递归地遍历文件系统中的所有文件，并更新与选中文件ID匹配的文件内容。\n       * 如果文件有子文件夹，则递归更新子文件夹中的文件。最终返回更新后的文件系统\n       */\n    } catch (error) {\n      console.error('Error submitting modification:', error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleCreateFile = async (parentId, fileName, isFolder = false) => {\n    // parentId（父文件夹的ID）\n    // fileName（要创建的文件或文件夹的名称）\n    // 可选的布尔值isFolder，默认为false，表示是否创建的是文件夹\n    try {\n      const response = await cloudDriveApi.createFile({\n        parentId,\n        name: fileName,\n        type: isFolder ? 'folder' : 'file'\n      });\n      const newFile = response.data.file;\n      setFileSystem(prevFileSystem => {\n        // 更新应用程序的文件系统状态\n        const addFileToSystem = files => {\n          // 递归地遍历文件系统树，并在适当的位置添加新创建的文件或文件夹\n          if (parentId === 'root') {\n            // parentId是'root'，则直接在文件列表末尾添加newFile\n            return [...files, newFile];\n          }\n          return files.map(file => {\n            // files.map()函数遍历当前文件系统中的所有文件和文件夹，目的是：找到正确的父节点并把新创建的文件或文件夹添加到其子节点列表中\n            if (file.id === parentId) {\n              // 每一个file，代码检查其id是否与parentId相匹配。parentId是新创建的文件或文件夹应该被添加到的父文件夹的ID\n              return {\n                ...file,\n                children: [...(file.children || []), newFile]\n              };\n              // 如果file.id与parentId匹配，那么file会被替换成一个新的对象，其children属性包含了原有的所有子文件/文件夹和新创建的newFile\n            }\n            // 对于每个file，如果它有子节点（即file.children存在），那么需要递归地处理这些子节点\n            if (file.children) {\n              return {\n                ...file,\n                children: addFileToSystem(file.children)\n              }; // 在文件系统树中正确地向下传递新创建的文件或文件夹\n            }\n            return file;\n          });\n        };\n        return addFileToSystem(prevFileSystem);\n      });\n    } catch (error) {\n      console.error(`Error creating ${isFolder ? 'folder' : 'file'}:`, error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleDeleteFile = async fileId => {\n    // fileId，这是要删除的文件的ID\n    try {\n      await cloudDriveApi.deleteFile({\n        fileId\n      });\n      if (selectedFile && selectedFile.id === fileId) {\n        setSelectedFile(null); // 如果删除的文件是当前选中的文件，则将selectedFile状态设置为null，以取消选中该文件\n      }\n      setFileSystem(prevFileSystem => {\n        const removeFileFromSystem = files => {\n          // 递归地遍历文件系统树，并删除指定的文件\n          return files.filter(file => {\n            if (file.id === fileId) {\n              return false; // 如果当前文件的 id 等于要删除的 fileId，则返回 false，从而在过滤中移除该文件\n            }\n            if (file.children) {\n              file.children = removeFileFromSystem(file.children);\n              // 如果当前文件有子文件 (file.children)，则递归调用 removeFileFromSystem 处理子文件，确保子文件中也能删除指定的文件\n            }\n            return true;\n          });\n        };\n        return removeFileFromSystem(prevFileSystem);\n      });\n      console.log('File deleted successfully');\n    } catch (error) {\n      console.error('Error deleting file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-100 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex p-4 space-x-4 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 bg-white rounded-lg shadow-md p-4 flex flex-col overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-gray-800\",\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(FileTree, {\n            files: fileSystem,\n            onSelectFile: handleSelectFile,\n            onCreateFile: handleCreateFile,\n            onDeleteFile: handleDeleteFile,\n            selectedFileId: selectedFile ? selectedFile.id : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 flex flex-col space-y-4 overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow flex space-x-4 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            file: selectedFile,\n            aiModifiedContent: aiModifiedContent,\n            onSave: handleSaveContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1/3 bg-white rounded-lg shadow-md p-4 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4 text-gray-800\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n            messages: messages,\n            onSendMessage: handleSendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex space-x-2 bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateModification,\n        className: \"p-2 bg-green-500 text-white rounded-md flex items-center transition duration-300 ease-in-out hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\",\n        children: [/*#__PURE__*/_jsxDEV(Edit, {\n          size: 20,\n          className: \"mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), \"Generate Modification\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitModification,\n        className: \"p-2 bg-blue-500 text-white rounded-md flex items-center transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\",\n        children: [/*#__PURE__*/_jsxDEV(Save, {\n          size: 20,\n          className: \"mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), \"Submit Modification\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jrPXsAyJkaVCj26fReZqirtRIE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Save","Edit","io","FileTree","Editor","ChatBox","transitServerApi","cloudDriveApi","jsxDEV","_jsxDEV","App","_s","fileSystem","setFileSystem","selectedFile","setSelectedFile","aiModifiedContent","setAiModifiedContent","messages","setMessages","existingUserId","sessionStorage","getItem","newUserId","Date","now","Math","random","toString","slice","setItem","fetchInitialFileSystem","socket","path","on","updatedFileSystem","disconnect","response","getInitialFileSystem","data","error","console","handleSaveContent","content","saveFile","file","id","log","prevFile","prevFileSystem","updateFileInSystem","files","map","children","handleSelectFile","handleSendMessage","message","userId","newMessage","sender","timestamp","toISOString","prevMessages","getChatContent","handleGenerateModification","genModifyMessage","getFileContent","handleSubmitModification","sendModifyMessage","getTrainData","prev","handleCreateFile","parentId","fileName","isFolder","createFile","name","type","newFile","addFileToSystem","handleDeleteFile","fileId","deleteFile","removeFileFromSystem","filter","className","_jsxFileName","lineNumber","columnNumber","onSelectFile","onCreateFile","onDeleteFile","selectedFileId","onSave","onSendMessage","onClick","size","_c","$RefreshReg$"],"sources":["/Users/huluobo/Github_Content/Project-Code/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Save, Edit } from 'lucide-react';\nimport io from 'socket.io-client';\nimport FileTree from './components/FileTree';\nimport Editor from './components/Editor';\nimport ChatBox from './components/ChatBox';\nimport { transitServerApi, cloudDriveApi } from './apiClient';\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState([]); // FileSystem \"Object\"\n  const [selectedFile, setSelectedFile] = useState(null); // SelectedFile \"Object\"\n  const [aiModifiedContent, setAiModifiedContent] = useState(''); // AI-modified \"Content\"\n  const [messages, setMessages] = useState([]); // Conversation \"Messages History\"\n\n  useEffect(() => {\n    const existingUserId = sessionStorage.getItem('userId');\n    if (!existingUserId) { // 如果不存在userId，则创建一个新的userId并将其存储在sessionStorage中\n      const newUserId = `user_${Date.now()}_${Math.random().toString(36).slice(2, 11)}`;\n      sessionStorage.setItem('userId', newUserId);  \n    }\n\n    fetchInitialFileSystem();\n\n    const socket = io('/ng/cloud-drive-service', {\n      path: '/socket.io'\n    }); // 创建一个到服务器的WebSocket连接\n    socket.on('fileSystemUpdate', (updatedFileSystem) => {\n      setFileSystem(updatedFileSystem);\n    }); // 监听fileSystemUpdate事件，当服务器发送更新后的文件系统数据时，setFileSystem(updatedFileSystem)将被调用来更新组件状态\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // with Drive-Backend\n  const fetchInitialFileSystem = async () => {\n    try {\n      const response = await cloudDriveApi.getInitialFileSystem(); // Web <-> Drive -> initialFileSystem\n      setFileSystem(response.data);\n    } catch (error) {\n      console.error('Error fetching initial file system:', error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleSaveContent = useCallback(async (content) => {\n    // 接收一个参数content，即要保存的文件内容\n    if (!selectedFile) return;\n\n    try {\n      await cloudDriveApi.saveFile({\n        file: {\n          id: selectedFile.id,\n          content: content\n        }\n      });\n      console.log('File saved successfully');\n      setSelectedFile(prevFile => ({ ...prevFile, content })); // 更新本地状态selectedFile，将最新的文件内容content赋值给selectedFile的content属性\n      \n      setFileSystem(prevFileSystem => { // 更新应用程序的文件系统状态，确保文件系统中包含最新的文件内容\n        const updateFileInSystem = (files) => { // 用于递归遍历文件系统树，查找与selectedFile.id匹配的文件，并更新其内容\n          return files.map(file => {\n            if (file.id === selectedFile.id) { // 文件的id与selectedFile.id相同，返回一个新对象，其内容更新为content\n              return { ...file, content };\n            }\n            if (file.children) { // 文件有子文件，递归调用updateFileInSystem函数来更新子文件的内容\n              return { ...file, children: updateFileInSystem(file.children) };\n            }\n            return file; // 文件的id不匹配且没有子文件，直接返回原文件对象\n          });\n        };\n        return updateFileInSystem(prevFileSystem);\n      });\n    } catch (error) {\n      console.error('Error saving file:', error);\n    }\n  }, [selectedFile]);\n\n  const handleSelectFile = (file) => {\n    setSelectedFile(file);\n    setAiModifiedContent('');\n  };\n\n  // with AI-Backend\n  const handleSendMessage = async (message) => {\n    const userId = sessionStorage.getItem('userId'); // 标识消息的发送者\n    const newMessage = {\n      sender: userId,\n      content: message,\n      timestamp: new Date().toISOString(),\n      file: selectedFile ? selectedFile.id : null // 如果selectedFile存在，则为它的ID，否则为null。表示如果用户发送消息时关联了一个文件，仅发送文件的ID，而不是整个文件对象\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]); // setMessages函数更新本地状态，将新消息添加 (append) 到现有的消息列表\n\n    try {\n      const response = await transitServerApi.getChatContent(newMessage);\n      setMessages(prevMessages => [...prevMessages, { sender: 'ai', content: response.data.content }]); // AI-Res append\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prevMessages => [...prevMessages, { sender: 'ai', content: 'Sorry, there was an error processing your request.' }]); // Error append\n    }\n  };\n\n  const handleGenerateModification = async () => {\n    if (!selectedFile) return;\n\n    try {\n      const userId = sessionStorage.getItem('userId');\n      const genModifyMessage = {\n        sender: userId,\n        content: \"Please modify this file\",\n        timestamp: new Date().toISOString(),\n        prevFile: selectedFile ? selectedFile.id : null, // 只发送文件ID\n        aiModifiedContent: aiModifiedContent // 发送AI修改后的内容\n      };\n\n      const response = await transitServerApi.getFileContent(genModifyMessage); // 发送请求，建立连接，传递 genModifyMessage 对象，等待响应\n      setAiModifiedContent(response.data.content); // 从响应中提取修改后的内容，并调用 setAiModifiedContent 将其设置为AI修改后的内容\n    } catch (error) {\n      console.error('Error generating modification:', error);\n    }\n  };\n\n  const handleSubmitModification = async () => {\n    if (!selectedFile) return;\n\n    try {\n      const userId = sessionStorage.getItem('userId');\n\n      const sendModifyMessage = {\n        sender: userId,\n        content: \"submit modified file\",\n        timestamp: new Date().toISOString(),\n        prevFile: selectedFile ? selectedFile.id : null, // 只发送文件ID\n        aiModifiedContent: aiModifiedContent // 发送AI修改后的内容\n      };\n\n      await transitServerApi.getTrainData(sendModifyMessage);\n\n      setSelectedFile(prev => ({ ...prev, content: aiModifiedContent })); \n      // setSelectedFile 更新选中文件的内容，将其设置为AI修改后的内容。\n      // 箭头函数=> ，保留文件的其他属性，仅更新 content 属性\n      setAiModifiedContent(''); // 将 aiModifiedContent 清空，重置为初始状态\n      \n      setFileSystem(prevFileSystem => {\n        const updateFileInSystem = (files) => {\n          return files.map(file => {\n            if (file.id === selectedFile.id) {\n              return { ...file, content: aiModifiedContent };\n            }\n            if (file.children) {\n              return { ...file, children: updateFileInSystem(file.children) };\n            }\n            return file;\n          });\n        };\n        return updateFileInSystem(prevFileSystem);\n      });\n      /**\n       * 用 setFileSystem 更新文件系统的状态。\n       * 定义一个名为 updateFileInSystem 的函数，该函数递归地遍历文件系统中的所有文件，并更新与选中文件ID匹配的文件内容。\n       * 如果文件有子文件夹，则递归更新子文件夹中的文件。最终返回更新后的文件系统\n       */\n    } catch (error) {\n      console.error('Error submitting modification:', error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleCreateFile = async (parentId, fileName, isFolder = false) => {\n    // parentId（父文件夹的ID）\n    // fileName（要创建的文件或文件夹的名称）\n    // 可选的布尔值isFolder，默认为false，表示是否创建的是文件夹\n    try {\n      const response = await cloudDriveApi.createFile({ parentId, name: fileName, type: isFolder ? 'folder' : 'file' });\n      const newFile = response.data.file;\n      \n      setFileSystem(prevFileSystem => { // 更新应用程序的文件系统状态\n        const addFileToSystem = (files) => { // 递归地遍历文件系统树，并在适当的位置添加新创建的文件或文件夹\n          if (parentId === 'root') {\n            // parentId是'root'，则直接在文件列表末尾添加newFile\n            return [...files, newFile]; \n          }\n          return files.map(file => {\n            // files.map()函数遍历当前文件系统中的所有文件和文件夹，目的是：找到正确的父节点并把新创建的文件或文件夹添加到其子节点列表中\n            if (file.id === parentId) { \n              // 每一个file，代码检查其id是否与parentId相匹配。parentId是新创建的文件或文件夹应该被添加到的父文件夹的ID\n              return {\n                ...file,\n                children: [...(file.children || []), newFile]\n              };\n            // 如果file.id与parentId匹配，那么file会被替换成一个新的对象，其children属性包含了原有的所有子文件/文件夹和新创建的newFile\n            }\n            // 对于每个file，如果它有子节点（即file.children存在），那么需要递归地处理这些子节点\n            if (file.children) { \n              return { ...file, children: addFileToSystem(file.children) }; // 在文件系统树中正确地向下传递新创建的文件或文件夹\n            }\n            return file;\n          });\n        };\n        return addFileToSystem(prevFileSystem);\n      });\n    } catch (error) {\n      console.error(`Error creating ${isFolder ? 'folder' : 'file'}:`, error);\n    }\n  };\n\n  // with Drive-Backend\n  const handleDeleteFile = async (fileId) => {\n    // fileId，这是要删除的文件的ID\n    try {\n      await cloudDriveApi.deleteFile({ fileId });\n      if (selectedFile && selectedFile.id === fileId) {\n        setSelectedFile(null); // 如果删除的文件是当前选中的文件，则将selectedFile状态设置为null，以取消选中该文件\n      }\n      \n      setFileSystem(prevFileSystem => {\n        const removeFileFromSystem = (files) => { \n          // 递归地遍历文件系统树，并删除指定的文件\n          return files.filter(file => {\n            if (file.id === fileId) {\n              return false; // 如果当前文件的 id 等于要删除的 fileId，则返回 false，从而在过滤中移除该文件\n            }\n            if (file.children) {\n              file.children = removeFileFromSystem(file.children);\n              // 如果当前文件有子文件 (file.children)，则递归调用 removeFileFromSystem 处理子文件，确保子文件中也能删除指定的文件\n            }\n            return true;\n          });\n        };\n        return removeFileFromSystem(prevFileSystem);\n      });\n      console.log('File deleted successfully');\n    } catch (error) {\n      console.error('Error deleting file:', error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-100 overflow-hidden\">\n      <div className=\"flex-grow flex p-4 space-x-4 overflow-hidden\">\n        <div className=\"w-1/4 bg-white rounded-lg shadow-md p-4 flex flex-col overflow-hidden\">\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Files</h2>\n          <div className=\"flex-grow overflow-y-auto\">\n            <FileTree\n              files={fileSystem}\n              onSelectFile={handleSelectFile}\n              onCreateFile={handleCreateFile}\n              onDeleteFile={handleDeleteFile}\n              selectedFileId={selectedFile ? selectedFile.id : null}\n            />\n          </div>\n        </div>\n        <div className=\"w-3/4 flex flex-col space-y-4 overflow-hidden\">\n          <div className=\"flex-grow flex space-x-4 overflow-hidden\">\n            <Editor\n              file={selectedFile}\n              aiModifiedContent={aiModifiedContent}\n              onSave={handleSaveContent}\n            />\n          </div>\n          <div className=\"h-1/3 bg-white rounded-lg shadow-md p-4 overflow-hidden\">\n            <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Chat</h2>\n            <ChatBox messages={messages} onSendMessage={handleSendMessage} />\n          </div>\n        </div>\n      </div>\n      <div className=\"p-4 flex space-x-2 bg-gray-200\">\n        <button\n          onClick={handleGenerateModification}\n          className=\"p-2 bg-green-500 text-white rounded-md flex items-center transition duration-300 ease-in-out hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\"\n        >\n          <Edit size={20} className=\"mr-1\" />\n          Generate Modification\n        </button>\n        <button\n          onClick={handleSubmitModification}\n          className=\"p-2 bg-blue-500 text-white rounded-md flex items-center transition duration-300 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n        >\n          <Save size={20} className=\"mr-1\" />\n          Submit Modification\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}